; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
data_dir    = ./data
default_envs = ledstrip

; Link libs

[common]
lib_deps        = crankyoldgit/IRremoteESP8266  @ ^2.7.20
                  fastled/FastLED               @ ^3.4.0
                  adafruit/Adafruit BusIO       @ ^1.9.1
                  adafruit/Adafruit GFX Library @ ^1.10.12
                  adafruit/Adafruit ILI9341     @ ^1.5.10                  
                  olikraus/U8g2                 @ ^2.28.8
                  kosme/arduinoFFT              @ ^1.5.6                                                     
                  me-no-dev/AsyncTCP            @ ^1.1.1
                  https://github.com/PlummersSoftwareLLC/ESPAsyncWebServer.git
                  bblanchon/ArduinoJson         @ ^6.8.14
                  thomasfredericks/Bounce2      @ ^2.7.0
                  https://github.com/PlummersSoftwareLLC/RemoteDebug
                  QRCode                        @ ^0.0.1

; Libs needed to link with an M5StickC

[m5stick-c]
lib_deps        = ${common.lib_deps}
                  m5stack/M5StickC     @ ^0.2.3 

; Libs needed to link with an M5StickC Plus version
[m5stick-c-plus]
lib_deps        = ${common.lib_deps}
                  m5stack/M5StickCPlus @ ^0.0.2

; Libs needed to link with a TTGO Module
[ttgo]
lib_deps        = ${common.lib_deps}
                  https://github.com/Xinyuan-LilyGO/TTGO-T-Display
                  TFT_eSPI

[spectrum]
lib_deps        = ${common.lib_deps}
                  m5stack/M5StickCPlus @ ^0.0.2

; All lib deps combined
[all]
lib_deps        = ${common.lib_deps}
                  ${m5stick-c.lib_deps}
                  ${m5stick-c-plus.lib_deps}

[env]
platform        = espressif32
framework       = arduino
build_type      = release
build_unflags   = -std=gnu++11

lib_deps        = ${common.lib_deps}
lib_extra_dirs = ${PROJECT_DIR}/lib

; This partition table attempts to fit everything in 4M of flash.
board_build.partitions = partitions_custom.csv

monitor_filters = esp32_exception_decoder

[env:all-deps]
lib_deps      =  ${all.lib_deps}
board         = esp32dev


[env:demo]
board         = esp32dev
monitor_speed = 115200
upload_speed  = 921600
upload_port   = /dev/cu.SLAB_USBtoUART                       ; This will vary by machine and may not be needed if you have a single ESP attached
build_flags   = -DDEMO=1
                -std=gnu++17
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -Ofast 
[env:ledstrip]
board         = heltec_wifi_kit_32
build_type    = release
monitor_speed = 115200
upload_speed  = 921600
upload_port   = /dev/cu.SLAB_USBtoUART
monitor_port  = /dev/cu.SLAB_USBtoUART
build_flags   = -DLEDSTRIP=1
                -DUSE_SCREEN=1
                -DARDUINO_HELTEC_WIFI_KIT_32=1
                -std=gnu++17
                -DUNITY_INCLUDE_DOUBLE
                -DUNITY_DOUBLE_PRECISION=1e-12      ; Make doubles real 8 byte doubles
                -Dregister=                         ; Sinister:  redefined 'register' so FastLED can use that keyword under C++17
                -Os


[env:laserline]
board         = m5stick-c                    ; Requires the M5 Stick C Plus (note the Plus)
upload_speed  = 1500000
monitor_speed = 115200
upload_port   =                              ; Specify the serial port for your M5 Stick C Plus here (or leave blanks if only one ESP32 on your ports)
monitor_port  = 
build_flags   = -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -DLASERLINE=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
                -DLED_PIN0=32

lib_deps      = ${m5stick-c-plus.lib_deps}

; ledstrip_feather is based off ledstrip but intended for the ESP32S3 TFT Feather from Adafruit with 2MB PSRAM

[env:ledstrip_feather]
board         = adafruit_feather_esp32s3_tft
monitor_speed = 1500000
upload_speed  = 1500000
upload_port   = /dev/cu.usbmodem8411101
monitor_port  = /dev/cu.usbmodem8411101
build_flags   = -DLEDSTRIP=1
                -DUSE_SCREEN=1
                -DUSE_TFTSPI=1
                -DUSER_SETUP_LOADED
                -DTOUCH_CS=0
                -DST7789_2_DRIVER
                -DTFT_WIDTH=135                      ; Define the TFT screen setup
                -DTFT_HEIGHT=240
                -DTFT_BL=45             
                -DTFT_BACKLIGHT_ON=HIGH
                -DTFT_RGB_ORDER=TFT_RGB              ; Fix color order being swapped
                -DTFT_CS=7                           ; CS, DC, RST                      
                -DTFT_DC=39
                -DTFT_RST=40
                -DTFT_MOSI=35                        ; MOSI, MISO, CLK
                -DTFT_MISO=37
                -DTFT_SCLK=36
                -DLOAD_GLCD=1                        ; Font info
                -DLOAD_FONT2=1
                -DLOAD_FONT4=1
                -DLOAD_FONT6=1
                -DLOAD_FONT7=1
                -DLOAD_FONT8=1
                -DLOAD_FONT8N=1
                -DLOAD_GFXFF=1
                -DSMOOTH_FONT=1
                -DSPI_FREQUENCY=27000000                
                -DESP32FEATHERTFT=1                 ; This board has a TFT that is supported by TFT_eSPI
                -DTOGGLE_BUTTON_1=0                 ; Use GPIO0 button as the info toggle
                -DNUM_INFO_PAGES=2
                -std=gnu++17
                -DUSE_PSRAM=1
                -DBOARD_HAS_PSRAM=1
                -mfix-esp32-psram-cache-issue
                -DUNITY_INCLUDE_DOUBLE 
                -DUNITY_DOUBLE_PRECISION=1e-12      ; Make doubles real 8 byte doubles
                -Dregister=                         ; Sinister:  redefined 'register' so FastLED can use that keyword under C++17
                -Os
lib_deps        = ${common.lib_deps}
                  TFT_eSPI

[env:ledstrip_feather_wrover]
board         = esp-wrover-kit
monitor_speed = 115200
upload_speed  = 1500000
upload_port   = /dev/cu.usbserial-59562502FD
monitor_port  = /dev/cu.usbserial-59562502FD
build_flags   = -DLEDSTRIP=1
                -DUSER_SETUP_LOADED
                -std=gnu++17
                -DUSE_PSRAM=1
                -DBOARD_HAS_PSRAM=1
                -mfix-esp32-psram-cache-issue
                -Dregister=                         ; Sinister:  redefined 'register' so FastLED can use that keyword under C++17
                -Os
lib_deps        = ${common.lib_deps}
debug_init_break = tbreak setup

[env:spectrum_wrover_kit]
board         = esp-wrover-kit                   ; Requires the M5 Stick C Plus (note the Plus)
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = /dev/cu.usbserial-59562502FD
monitor_port  = /dev/cu.usbserial-59562502FD
build_flags   = -DSPECTRUM=1
                -DSPECTRUM_WROVER_KIT=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
lib_deps        = ${common.lib_deps}
debug_init_break = tbreak setup

[env:ledstrip_pico]
board         = tinypico
monitor_speed = 115200
upload_speed  = 1500000
upload_port   = /dev/cu.usbserial-01C87345
monitor_port  = /dev/cu.usbserial-01C87345
build_flags   = -DLEDSTRIP=1
                -std=gnu++17
                -DUSE_PSRAM=1
                -DBOARD_HAS_PSRAM=1
                -mfix-esp32-psram-cache-issue
                -DUNITY_INCLUDE_DOUBLE 
                -DUNITY_DOUBLE_PRECISION=1e-12      ; Make doubles real 8 byte doubles
                -Dregister=                         ; Sinister:  redefined 'register' so FastLED can use that keyword under C++17
                -Os
[env:chieftain]
board         = tinypico
monitor_speed = 115200
upload_speed  = 921600
upload_port   = /dev/ttyUSB1
monitor_port  = /dev/ttyUSB1
build_flags   = -DCHIEFTAIN=1
                -DUNITY_INCLUDE_DOUBLE 
                -DUNITY_DOUBLE_PRECISION=1e-12      ; Make doubles real 8 byte doubles
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 

[env:ledstriplite]
board         = esp32dev
monitor_speed = 115200
upload_speed  = 921600
upload_port   = /dev/ttyUSB1
monitor_port  = /dev/ttyUSB1
build_flags   = -DLEDSTRIP=1
                -DUNITY_INCLUDE_DOUBLE 
                -DUNITY_DOUBLE_PRECISION=1e-12      ; Make doubles real 8 byte doubles
                -std=gnu++17
                -Dregister=                         ; Sinister:  redefined 'register' so FastLED can use that keyword under C++17
                -Ofast


[env:umbrella]
board         = esp32dev
monitor_speed = 115200
upload_speed  = 921600
upload_port   = 192.168.8.27
monitor_port  = /dev/ttyUSB2
build_flags   = -DUMBRELLA=1
                -DUSE_SCREEN=0
                -DUNITY_INCLUDE_DOUBLE 
                -DUNITY_DOUBLE_PRECISION=1e-12      ; Make doubles real 8 byte doubles
                -D_IR_ENABLE_DEFAULT_=false         ; don't automatically include every remote control decoder
                -DDECODE_NEC=true                   ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -O3

[env:generic]
board         = esp32dev
monitor_speed = 115200
upload_speed  = 921600
upload_port   = /dev/cu.usbserial-01B5715B
build_flags   = -DLEDSTRIP=1
                -std=gnu++17
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -Ofast 

; This is the basic DEMO project, but expanded to work on the M5, which means it can draw to 
; the built in LCD.  It's made so that you can connect to the small 4-pin connector on the M5,
; so it sends power and ground as well as data on PIN 32.D

[env:m5demo]
board         = m5stick-c                    ; Requires the M5 Stick C Plus (note the Plus)
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = 3                    ; This will vary by machine
build_flags   = -DDEMO=1
                -DM5STICKC=1
                -DUSE_SCREEN=1
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c.lib_deps}

; This is largely the same as the m5demo above except it links to the PLUS version of the lib
; and defines M5STICKCPLUS=1 

[env:m5plusdemo]
board         = m5stick-c                    ; Requires the M5 Stick C Plus (note the Plus)
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM4                   ; This will vary by machine
build_flags   = -DDEMO=1
                -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

[env:heltecdemo]
board         = heltec_wifi_kit_32
monitor_speed = 115200
upload_speed  = 921600
upload_port   = /dev/ttyUSB0
monitor_port  = /dev/ttyUSB0
build_flags   = -DDEMO=1
                -DUSE_SCREEN=1
                -DARDUINO_HELTEC_WIFI_KIT_32=1                
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 

[env:heltecv2demo]                     ; V2 board has 8M flash
board = heltec_wifi_kit_32_v2
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM7
monitor_port  = COM7
build_flags   = -DDEMO=1
                -DUSE_SCREEN=1
                -DARDUINO_HELTEC_WIFI_KIT_32=1                
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 

[env:mesmerizer]
board         = esp-wrover-kit
upload_speed  = 1000000
monitor_speed = 115200
upload_port   = /dev/cu.usbserial-8411100
monitor_port  = /dev/cu.usbserial-8411100
build_flags   = -DMESMERIZER=1
                -DUSEMATRIX=1
                -DUSE_PSRAM=1
                -DBOARD_HAS_PSRAM=1
                -mfix-esp32-psram-cache-issue
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -O
debug_tool    = ftdi
lib_deps      =  ${common.lib_deps}
                 https://github.com/davepl/SmartMatrix.git

[env:panlee]
board         = esp32-s3-devkitc-1
board_build.mcu = esp32s3
board_build.f_cpu = 240000000L
upload_speed  = 1000000
monitor_speed = 115200
;upload_port   = /dev/tty.usbmodem84201
monitor_port  = /dev/cu.usbmodem84401
build_flags   = -DLEDSTRIP=1
                -DUSE_SCREEN=1
                -DUSE_TFTSPI=1
                -DUSER_SETUP_LOADED=1
                -DST7796_DRIVER=1
                -DTFT_WIDTH=480
                -DTFT_HEIGHT=320
                -DUSE_HSPI_PORT=1
                -DPIN_SDA=38
                -DPIN_SCL=19
                -DTFT_MISO=12
                -DTFT_MOSI=13
                -DTFT_SCLK=39
                -DTFT_CS=15
                -DTFT_DC=21
                -DTFT_RST=22
                -DTFT_BL=48
                -DLOAD_GLCD
                -DLOAD_FONT2  
                -DLOAD_FONT4
                -DLOAD_FONT6 
                -DLOAD_FONT7
                -DLOAD_FONT8
                -DLOAD_GFXFF
                -DSPI_FREQUENCY=27000000
                -DSPI_READ_FREQUENCY=20000000
                -DSPI_TOUCH_FREQUENCY=2500000
                -DSMOOTH_FONT
                -DNUM_INFO_PAGES=1
                -DPANLEE=1
                -DUSE_PSRAM=1
                -DBOARD_HAS_PSRAM=1
                -mfix-esp32-psram-cache-issue
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -O
lib_deps      =  ${common.lib_deps}
                 TFT_eSPI                 

[env:spectrum]
board         = m5stick-c                    ; Requires the M5 Stick C Plus (note the Plus)
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = 
monitor_port  = 
build_flags   = -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -DSPECTRUM=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

[env:spectrumlite]                            ; Sane as SPECTRUM but required a non-Plus M5 Stick
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
build_flags   = -DM5STICKC=1
                -DUSE_SCREEN=1
                -DSPECTRUM=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c.lib_deps}

[env:ttgo]
board         = esp32dev
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM14
build_flags   = -DTTGO=1
                -DUSE_SCREEN=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
lib_deps      = ${ttgo.lib_deps}

[env:xmastrees]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM11
build_flags   = -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -DARDUINO_HELTEC_WIFI_KIT_32=1                
                -DXMASTREES=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disabling above to figure out which it is.
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

[env:insulators]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = /dev/ttyUSB0
monitor_port  = /dev/ttyUSB0
build_flags   = -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -DINSULATORS=1
                -D_IR_ENABLE_DEFAULT_=false  ; don't automatically include every remote control decoder
                -DDECODE_NEC=true            ; enable whichever you need for your remote.  Try not disa                
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast
lib_deps      = ${m5stick-c-plus.lib_deps}



[env:magicmirror]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM21
build_flags   = -DM5STICKC=1
                -DUSE_SCREEN=1
                -DARDUINO_HELTEC_WIFI_KIT_32=1                
                -DMAGICMIRROR=1
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast                 
lib_deps      = ${m5stick-c.lib_deps}
                

[env:atomlight]
board         = heltec_wifi_kit_32
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM10
build_flags   = -DATOMLIGHT=1
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 

[env:brooklynroom]
board         = heltec_wifi_kit_32
monitor_speed = 115200
upload_speed  = 921600
upload_port   = COM10
build_flags   = -DBROOKLYNROOM=1
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 

[env:fanset]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM3
build_flags   = -DM5STICKC=1
                -DUSE_SCREEN=1
                -DFANSET=1
                -std=gnu++17
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -Ofast 
lib_deps      = ${m5stick-c.lib_deps}

[env:cube]
board         = m5stick-c
upload_speed  = 1500000
monitor_speed = 115200
upload_port   = COM6
build_flags   = -DM5STICKCPLUS=1
                -DUSE_SCREEN=1
                -DCUBE=1
                -Dregister=                         ; Sinister:  redefine 'register' so FastLED can use that keyword under C++17
                -std=gnu++17
                -Ofast 
lib_deps      = ${m5stick-c-plus.lib_deps}

